Some extra articles or docs I read:

CHAINLINK VRF
v2 - [https://blog.chain.link/vrf-v2-mainnet-launch/]


The Chainlink VRF v2 solution uses both off-chain and on-chain components:

VRF v2 Wrapper (on-chain component): A wrapper for the VRF Coordinator that provides an interface for consuming contracts.
VRF v2 Coordinator (on-chain component): A contract designed to interact with the VRF service. It emits an event when a request for randomness is made, and then verifies the random number and proof of how it was generated by the VRF service.
VRF service (off-chain component): Listens for requests by subscribing to the VRF Coordinator event logs and calculates a random number based on the block hash and nonce. The VRF service then sends a transaction to the VRFCoordinator including the random number and a proof of how it was generated.



EVENTS AND LOG
EVM has this special data structure called log - used to store data and information and events.

Sometimes way too many events - the graph listens to these events and store them in the graph so that they can be queried later 
2 kinds of parameters - indexed and non-indexed
we can have upto 3 indexed parameters - they are easily searchable and much easier to query than non-indexed
Indexed Parameter == Topic

we need to emit an event in order to store it into the logging data structure